version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    mem_limit: 4g
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep green || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    image: lex_fridman_podcast_ollama:latest
    container_name: ollama
    environment:
      - CHAT_MODEL=${CHAT_MODEL}
      - EMBED_MODEL=${EMBED_MODEL}
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:11434 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    image: lex_fridman_podcast_streamlit:latest
    container_name: streamlit
    environment:
      - ELASTIC_HOST=${ELASTIC_HOST}
      - ELASTIC_PORT=${ELASTIC_PORT}
      - ES_INDEX_NAME=${ES_INDEX_NAME}

      - OLLAMA_HOST=${OLLAMA_HOST}
      - OLLAMA_PORT=${OLLAMA_PORT}
      - CHAT_MODEL=${CHAT_MODEL}
      - EMBED_MODEL=${EMBED_MODEL}

      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}

      - OPENAI_API_KEY=${OPENAI_API_KEY}

      - PROJECT_DIR=${PROJECT_DIR}
      - EVAL_MODEL=${EVAL_MODEL}

      - IS_SETUP=false
    ports:
      - "${STREAMLIT_PORT:-8501}:8501"
    depends_on:
      - elasticsearch
      - ollama
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8501/_stcore/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  grafana:
    build:
      context: .
      dockerfile: Dockerfile.grafana
    image: lex_fridman_podcast_grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:3000/api/health | grep '\"database\": \"ok\"' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  ollama_data:
  postgres_data:
  grafana_data:
  elasticsearch_data:
